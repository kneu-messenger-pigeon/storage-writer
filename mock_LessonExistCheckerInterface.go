// Code generated by mockery v2.28.1. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// MockLessonExistCheckerInterface is an autogenerated mock type for the LessonExistCheckerInterface type
type MockLessonExistCheckerInterface struct {
	mock.Mock
}

// Exists provides a mock function with given fields: year, semester, disciplineId, lessonId
func (_m *MockLessonExistCheckerInterface) Exists(year int, semester uint8, disciplineId uint, lessonId uint) bool {
	ret := _m.Called(year, semester, disciplineId, lessonId)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int, uint8, uint, uint) bool); ok {
		r0 = rf(year, semester, disciplineId, lessonId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewMockLessonExistCheckerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockLessonExistCheckerInterface creates a new instance of MockLessonExistCheckerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockLessonExistCheckerInterface(t mockConstructorTestingTNewMockLessonExistCheckerInterface) *MockLessonExistCheckerInterface {
	mock := &MockLessonExistCheckerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
